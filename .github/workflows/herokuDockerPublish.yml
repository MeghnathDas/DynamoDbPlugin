name: MD-Notes-CI
#Trigger
on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
# Environment variable setup
env:
  uses: actions/heroku@master
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

jobs:
  build-and-publish-docker-image:
    runs-on: ubuntu-latest
    steps:
    # Checkout code
    - name: Checkout code repo
      uses: actions/checkout@v2

    # # Environment variable setup
    # - name: Setting runner environment variables
    #   uses: actions/heroku@master
    #   env:
    #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    #     HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

    #Docker image building
    - name: Build Docker image
      id: stepBdi      
      run: docker build . --file Dockerfile --tag $HEROKU_APP_NAME

    # #Github package registry login
    # - name: Log into github package registry
    #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    # #Push package into github package registry
    # - name: Push image to git package registry
    #   run: |
    #     IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
        
    #     # Change all uppercase to lowercase
    #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

    #     # Strip git ref prefix from version
    #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

    #     # Strip "v" prefix from tag name
    #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

    #     # Use Docker `latest` tag convention
    #     [ "$VERSION" == "master" ] && VERSION=latest

    #     echo IMAGE_ID=$IMAGE_ID
    #     echo VERSION=$VERSION

    #     docker tag image $IMAGE_ID:$VERSION
    #     docker push $IMAGE_ID:$VERSION
    # - run: echo $HEROKU_APP_NAME
    #Pushing docker image to heroku
    - name: Log into Heroku and deploy image
      # if: steps.stepBdi.outputs.status == 'success'
      #docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
      run: |
          echo | set /p="$HEROKU_API_KEY" | docker login --username=_ --password-stdin
          docker tag $HEROKU_APP_NAME registry.heroku.com/$HEROKU_APP_NAME/web
          docker push registry.heroku.com/$HEROKU_APP_NAME/web
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku container:release web -a $HEROKU_APP_NAME
